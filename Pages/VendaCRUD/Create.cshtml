@page
@model Padaria03.Pages.VendaCRUD.CreateModel

<form method="post">
    <div class="form-group">
        <label asp-for="Venda.ClienteId" class="control-label"></label>
        <select asp-for="Venda.ClienteId" asp-items="Model.Clientes" class="form-control"></select>
        <span asp-validation-for="Venda.ClienteId" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Venda.ProdutoId" class="control-label"></label>
        <select asp-for="Venda.ProdutoId" asp-items="Model.Produtos" class="form-control"></select>
        <span asp-validation-for="Venda.ProdutoId" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Venda.Quantidade" class="control-label"></label>
        <input asp-for="Venda.Quantidade" class="form-control" />
        <span asp-validation-for="Venda.Quantidade" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Venda.ValorTotal" class="control-label"></label>
        <input asp-for="Venda.ValorTotal" class="form-control" readonly="readonly" />
        <span asp-validation-for="Venda.ValorTotal" class="text-danger"></span>
    </div>
    <input type="submit" value="Create" class="btn btn-primary" />
</form>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const quantidadeInput = document.querySelector('input[name="Venda.Quantidade"]');
            const valorTotalInput = document.querySelector('input[name="Venda.ValorTotal"]');
            const produtoSelect = document.querySelector('select[name="Venda.ProdutoId"]');

            async function atualizarValorTotal() {
                const produtoId = produtoSelect.value;
                const quantidade = parseFloat(quantidadeInput.value) || 0;

                if (produtoId && quantidade) {
                    try {
                        // Buscar o valor do produto
                        const response = await fetch(`/api/produtos/${produtoId}`);
                        if (!response.ok) {
                            throw new Error('Network response was not ok.');
                        }
                        const produto = await response.json();
                                const valorUnitario = produto.preco;
                        const valorTotal = quantidade * valorUnitario;
                        valorTotalInput.value = valorTotal.toFixed(2);
                    } catch (error) {
                            console.error("Erro ao buscar dados do produto:", error);
                            }
                        } else {
                            valorTotalInput.value = '0.00';  // Reseta o valor total se não houver quantidade ou produto
                        }
                    }

                    quantidadeInput.addEventListener('input', atualizarValorTotal);
                    produtoSelect.addEventListener('change', atualizarValorTotal);
                });
    </script>
}
